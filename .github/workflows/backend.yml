name: Docker and Helm Push with Auto Versioning

on:
  push:
    branches:
      - main

jobs:
  calculate-version:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.set_new_version.outputs.new_version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get the latest tag
        id: get_latest_tag
        run: |
          git fetch --tags
          echo "latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1) || echo "v0.0.0")" >> $GITHUB_OUTPUT

      - name: Calculate new version
        id: set_new_version
        run: |
          latest_tag="${{ steps.get_latest_tag.outputs.latest_tag }}"
          echo "Latest tag: $latest_tag"

          # Extract the major, minor, and patch numbers
          IFS='.' read -r major minor patch <<< "${latest_tag//[!0-9.]/}"

          # Increment the patch version
          new_version="v$major.$minor.$((patch + 1))"
          echo "New version: $new_version"
          echo "new_version=$new_version" >> $GITHUB_OUTPUT

  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: calculate-version

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -f docker/app/Dockerfile -t ${{ secrets.DOCKERHUB_USERNAME }}/oiai-api:${{ needs.calculate-version.outputs.new_version }} .
          echo ${{ needs.calculate-version.outputs.new_version }}
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/oiai-api:${{ needs.calculate-version.outputs.new_version }}

  helm-package-and-push:
    runs-on: ubuntu-latest
    needs:
      - docker-build-and-push
      - calculate-version

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Download Chart dependencies
        run: |
          helm dependency update ./charts/api

      - name: Package Helm chart
        run: |
          echo ${{ needs.calculate-version.outputs.new_version }}
          helm package ./charts/api --version ${{ needs.calculate-version.outputs.new_version }}
      
      - name: Temporary ls
        run: ls
      
      - name: Push Helm chart to Docker Hub
        env:
          HELM_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          HELM_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          export HELM_REPO_URL="oci://registry-1.docker.io/${{ secrets.DOCKERHUB_USERNAME }}/oiai-api-dev-base-chart"
          helm registry login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_TOKEN registry-1.docker.io
          helm push oiai-api-${{ needs.calculate-version.outputs.new_version }}.tgz $HELM_REPO_URL
